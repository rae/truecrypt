/*
 Copyright (c) TrueCrypt Foundation. All rights reserved.

 Covered by the TrueCrypt License 2.3 the full text of which is contained
 in the file License.txt included in TrueCrypt binary and source code
 distribution packages.
*/

import "wtypes.idl";
import "..\Common\Password.h";

[
	uuid(A7DF958C-0716-49E9-8C3E-53A775797576),
	helpstring("TrueCrypt Format"),
	version(1.0)
]
library TrueCryptFormat
{
	[
		uuid(9EE02955-174A-48F1-820C-022F327BE109),
		object,
		oleautomation,
		helpstring("TrueCrypt Format Interface")
	]
	interface ITrueCryptFormat : IUnknown
	{
		int AnalyzeHiddenVolumeHost (LONG_PTR hwndDlg, int *driveNo, __int64 hiddenVolHostSize, int *realClusterSize, __int64 *nbrFreeClusters);
		BOOL FormatNtfs (int driveNo, int clusterSize);
		int FormatVolume (BSTR volumePath, BOOL bDevice, unsigned __int64 size, unsigned __int64 hiddenVolHostSize, Password *password, int cipher, int pkcs5, BOOL quickFormat, BOOL sparseFileSwitch, int fileSystem, int clusterSize, LONG_PTR hwndDlg, LONG_PTR hDiskKey, LONG_PTR hHeaderKey, BOOL showKeys, BOOL hiddenVol, int *realClusterSize);
		void SetCallBack (ITrueCryptFormat *callBack);
		BOOL UpdateProgressBarCallBack (__int64 secNo);
		BOOL UpdateProgressBar (__int64 secNo, BOOL *bThreadCancel);
	};

	[
		uuid(777DCDFD-C330-480B-B582-B02B57580CC9),
		helpstring("TrueCrypt Format Coclass")
	]
	coclass TrueCryptFormat
	{
		[default] interface ITrueCryptFormat;
	}
}
